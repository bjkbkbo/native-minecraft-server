name: Build Native Minecraft Server

on:
  push:
    branches:
      - main
    tags:
      - 'v-*'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history and tags

      # Create tag with format v-YYYY-MM-DD if not already running on a tag
      - name: Create tag if not exists
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          TAG_NAME="v-$(date +'%Y-%m-%d')"
          echo "Creating tag $TAG_NAME"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "$TAG_NAME" || echo "Tag already exists, skipping tag creation"
          git push origin "$TAG_NAME" || echo "Tag already exists remotely, skipping push"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.2.0'
          java-version: '17'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check build.sh
        shell: bash
        run: shellcheck build.sh

      - name: Build and run native Minecraft server
        shell: bash
        run: |
          ./build.sh

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: minecraft-server
          path: .

      # Extract the tag name if we're running from a tag trigger
      - name: Set tag name from ref
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Create a zip file for the release
      - name: Zip artifact for release
        run: zip -r minecraft-server.zip .
        if: env.TAG_NAME != ''

      # Create a release using the tag
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: env.TAG_NAME != ''
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: minecraft-server.zip
          token: ${{ secrets.GITHUB_TOKEN }}
